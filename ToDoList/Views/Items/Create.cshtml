@{
  Layout = "_Layout";
}

@model ToDoList.Models.Item

<div class="container mt-5 col-sm-4">
  <h4 class="mb-3">Add a new item</h4>

@if (ViewData.ModelState.ContainsKey("CategoryId") && ViewData.ModelState["CategoryId"].Errors.Any())
{
  <div class="alert alert-danger alert-dismissible fade show" role="alert">
    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "font-weight-bold" })
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

@if (ViewData.ModelState.ContainsKey("Description") && ViewData.ModelState["Description"].Errors.Any())
{
  <div class="alert alert-danger alert-dismissible fade show" role="alert">
    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "font-weight-bold" })
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

  @using (Html.BeginForm())
  {
    <div class="mb-3">
      @Html.LabelFor(model => model.Description, new { @class = "form-label" })
      @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
    </div>

    <div class="mb-3">
      @Html.LabelFor(model => model.Category, new { @class = "form-label" })
      @Html.DropDownList("CategoryId", null, new { @class = "form-select" })
    </div>

    <input type="submit" value="Add new item" class="btn btn-primary mb-3" />
  }

  <p><a href="@Url.Action("Index")" class="btn btn-secondary">Show all items</a></p>
</div>